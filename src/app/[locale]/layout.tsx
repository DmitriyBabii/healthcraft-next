import { notFound } from 'next/navigation';
import { routing } from '@/i18n/routing';
import { LocalizationAvailable } from '../types/localization';
import AuthProvider from '../shared/providers/AuthProvider';
import Header from '../shared/layouts/Header';
import { NextIntlClientProvider } from 'next-intl';
import Footer from '../shared/layouts/Footer';
import '../styles/globals.css';
import '../styles/normalize.css';
import {
   Montserrat,
   Montserrat_Alternates,
   Namdhinggo,
   Open_Sans,
   Roboto,
} from 'next/font/google';
import { Metadata } from 'next';
import { getMessages } from 'next-intl/server';

const montserrat = Montserrat({
   subsets: ['latin', 'cyrillic'],
   variable: '--font-montserrat',
});

const montserratAlternates = Montserrat_Alternates({
   subsets: ['latin', 'cyrillic'],
   variable: '--font-montserrat-alternates',
   weight: ['900'],
});

const namdhinggo = Namdhinggo({
   subsets: ['latin'],
   variable: '--font-namdhinggo',
   weight: ['700', '800'],
});

const roboto = Roboto({
   subsets: ['latin', 'cyrillic'],
   variable: '--font-roboto',
   weight: ['400', '700'],
});

const openSans = Open_Sans({
   subsets: ['latin', 'cyrillic'],
   variable: '--font-open-sans',
});

export const metadata: Metadata = {
   title: 'Create Next App',
   description: 'Generated by create next app',
};

export default async function LocaleLayout({
   children,
   params,
}: {
   children: React.ReactNode;
   params: Promise<{ locale: string }>;
}) {
   const { locale } = await params;

   // Ensure that the incoming `locale` is valid
   if (!locale || !routing.locales.includes(locale as LocalizationAvailable)) {
      notFound();
   }

   let messages;
   try {
      messages = await getMessages();
   } catch (error) {
      console.error(error);
      notFound();
   }

   return (
      <html lang={locale}>
         <body
            className={`${montserrat.variable} ${montserratAlternates.variable} ${namdhinggo.variable} ${roboto.variable} ${openSans.variable}`}
         >
            <AuthProvider>
               <NextIntlClientProvider locale={locale} messages={messages}>
                  <Header />
                  {children}
                  <Footer />
               </NextIntlClientProvider>
            </AuthProvider>
         </body>
      </html>
   );
}
